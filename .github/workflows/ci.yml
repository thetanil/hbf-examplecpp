name: C++ Component CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Bazel
      uses: bazel-contrib/setup-bazel@0.15.0
      with:
        # Avoid downloading Bazel every time
        bazelisk-cache: true
        # Store build cache per workflow
        disk-cache: ${{ github.workflow }}
        # Share repository cache between workflows
        repository-cache: true
    
    - name: Build library
      run: bazel build //src:math_operations
    
    - name: Build all targets
      run: bazel build //...
    
    - name: Run all tests
      run: bazel test //... --test_output=errors
    
    - name: Validate module structure
      run: |
        echo "Validating Bazel module structure..."
        bazel query //... --output=package
        
    - name: Check code formatting (if clang-format available)
      run: |
        if command -v clang-format &> /dev/null; then
          ./tools/format_check.sh
        else
          echo "clang-format not available, skipping format check"
        fi

  trigger-renovate:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Trigger Renovate update in meta-repo
      env:
        META_REPO_TOKEN: ${{ secrets.RENOVATE_TOKEN }}
      run: |
        VERSION="${{ github.event.release.tag_name }}"
        echo "Triggering Renovate update for new version: $VERSION"
        
        # Extract version number (remove 'v' prefix if present)
        VERSION_NUMBER="${VERSION#v}"
        
        # Create a release note that Renovate will pick up
        echo "Component hbf_examplecpp updated to version $VERSION_NUMBER"
        echo "Release URL: ${{ github.event.release.html_url }}"
        
        # Validate that RENOVATE_TOKEN is configured
        if [ -z "$RENOVATE_TOKEN" ]; then
          echo "‚ùå RENOVATE_TOKEN secret is not configured!"
          echo "This is required to trigger Renovate updates in the meta-repository."
          echo "Please configure the RENOVATE_TOKEN secret in repository settings."
          exit 1
        fi
        
        echo "üöÄ Triggering Renovate update in meta-repository..."
        
        # Trigger Renovate run in meta-repo (MUST succeed)
        HTTP_STATUS=$(curl -s -w "%{http_code}" -o response.json -X POST \
          -H "Authorization: token $RENOVATE_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/thetanil/hbf/dispatches" \
          -d '{
            "event_type": "renovate-trigger",
            "client_payload": {
              "component": "hbf_examplecpp",
              "version": "'$VERSION_NUMBER'",
              "repository": "thetanil/hbf-examplecpp",
              "release_url": "${{ github.event.release.html_url }}"
            }
          }')
        
        echo "HTTP Status: $HTTP_STATUS"
        
        # Check if the API call was successful
        if [ "$HTTP_STATUS" -eq 204 ]; then
          echo "‚úÖ Successfully triggered Renovate update in meta-repository!"
          echo "Renovate should pick up the new version: $VERSION_NUMBER"
        else
          echo "‚ùå Failed to trigger Renovate update!"
          echo "HTTP Status Code: $HTTP_STATUS"
          echo "Response:"
          cat response.json || echo "No response content"
          echo ""
          echo "This could be due to:"
          echo "- Invalid RENOVATE_TOKEN (check token permissions)"
          echo "- Meta-repository 'thetanil/hbf' doesn't exist or is not accessible"
          echo "- Token doesn't have 'repo' scope for the meta-repository"
          echo "- Network or API issues"
          exit 1
        fi
