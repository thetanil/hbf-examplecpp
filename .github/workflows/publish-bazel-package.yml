name: Publish Bazel Package (Community Pattern)

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source repo
        uses: actions/checkout@v4

      - name: Extract release info
        id: release_info
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          VERSION_NUMBER="${VERSION#v}"
          echo "version_number=$VERSION_NUMBER" >> $GITHUB_OUTPUT
          echo "Version: $VERSION_NUMBER"

      - name: Download and verify release archive
        id: download
        run: |
          echo "📦 Downloading release archive for ${{ github.event.release.tag_name }}"
          ARCHIVE_URL="https://github.com/${{ github.repository }}/archive/refs/tags/${{ github.event.release.tag_name }}.zip"
          curl -L -o package.zip "$ARCHIVE_URL"
          
          echo "🔍 Calculating SHA256 checksum"
          SHA256=$(shasum -a 256 package.zip | cut -d " " -f 1)
          echo "sha256=$SHA256" >> $GITHUB_OUTPUT
          echo "archive_url=$ARCHIVE_URL" >> $GITHUB_OUTPUT
          echo "Archive SHA256: $SHA256"

      - name: Checkout registry repo
        uses: actions/checkout@v4
        with:
          repository: thetanil/hbf-bzl
          token: ${{ secrets.RENOVATE_TOKEN }}
          path: registry

      - name: Create registry structure
        run: |
          VERSION_NUMBER="${{ steps.release_info.outputs.version_number }}"
          MODULE_DIR="registry/modules/hbf_examplecpp"
          VERSION_DIR="$MODULE_DIR/$VERSION_NUMBER"
          
          echo "📁 Creating directory structure"
          mkdir -p "$VERSION_DIR"
          
          echo "📋 Creating MODULE.bazel"
          cp MODULE.bazel "$VERSION_DIR/"
          
          echo "📋 Creating source.json"
          cat > "$VERSION_DIR/source.json" << EOF
          {
            "url": "${{ steps.download.outputs.archive_url }}",
            "integrity": "sha256-${{ steps.download.outputs.sha256 }}",
            "strip_prefix": "hbf-examplecpp-${{ github.event.release.tag_name }}"
          }
          EOF
          
          echo "📋 Creating/updating metadata.json"
          if [[ -f "$MODULE_DIR/metadata.json" ]]; then
            # Update existing metadata.json (add version if not present)
            python3 << EOF
          import json
          
          with open("$MODULE_DIR/metadata.json", "r") as f:
              metadata = json.load(f)
          
          if "versions" not in metadata:
              metadata["versions"] = []
          
          version = "$VERSION_NUMBER"
          if version not in metadata["versions"]:
              metadata["versions"].append(version)
              metadata["versions"].sort(key=lambda v: [int(x) for x in v.split(".")])
          
          with open("$MODULE_DIR/metadata.json", "w") as f:
              json.dump(metadata, f, indent=2)
          EOF
          else
            # Create new metadata.json
            cat > "$MODULE_DIR/metadata.json" << EOF
          {
            "homepage": "https://github.com/${{ github.repository }}",
            "maintainers": ["${{ github.repository_owner }}"],
            "versions": ["$VERSION_NUMBER"],
            "yanked_versions": {}
          }
          EOF
          fi
          
          echo "✅ Registry structure created"

      - name: Commit and push changes
        working-directory: registry
        run: |
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git remote set-url origin https://x-access-token:${{ secrets.RENOVATE_TOKEN }}@github.com/thetanil/hbf-bzl.git
            git add modules/hbf_examplecpp/
            git commit -m "Add hbf_examplecpp" || echo "No changes to commit"
            git push origin HEAD:main

      - name: Summary
        run: |
          echo "## 🎉 Successfully Published to Bazel Registry" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Module**: hbf_examplecpp" >> $GITHUB_STEP_SUMMARY
          echo "**Version**: ${{ steps.release_info.outputs.version_number }}" >> $GITHUB_STEP_SUMMARY
          echo "**Registry**: https://github.com/thetanil/hbf-bzl" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Usage" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bazelrc" >> $GITHUB_STEP_SUMMARY
          echo "common --registry=https://raw.githubusercontent.com/thetanil/hbf-bzl/main/" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
